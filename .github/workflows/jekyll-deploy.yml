# ./.github/workflows/jekyll-deploy.yml
#
# Workflow definition to deploy the documentation markdown files from `docs` dir to GitHub Pages.

# IMPORTANT!!
# Jekyll is written in Ruby, and is ONLY used during GitHub's own build process.
# DO NOT add Ruby or Jekyll to this Node.js project.

name: Deploy GH Pages

on:
  push:
    branches:
      - main
  pull_request:
  # IMPORTANT!!
  # Please make a docs PR to main if wishing to update the GH Pages site.
  # The `workflow_dispatch` trigger is disabled.

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Part 1/2: Build the Jekyll site.
  build-gh-pages:
    name: Build GH Pages
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      pages: 'write'
      id-token: 'write'

    steps:
      - name: Checkout Code
        uses: 'actions/checkout@v4'

      - name: Setup Pages
        uses: 'actions/configure-pages@v5'

      - name: Jekyll Build
        uses: 'actions/jekyll-build-pages@v1'
        with:
          source: './docs/'
          destination: './docs/_site/'
          verbose: true

      - name: Upload Build Artifact
        uses: 'actions/upload-pages-artifact@v3'
        with:
          name: gh-pages-build-artifact
          path: './docs/_site/'

  # Part 2/2: Deploy the Jekyll site to GH Pages.
  deploy-gh-pages:
    name: Deploy GH Pages
    runs-on: ubuntu-latest
    needs: build-gh-pages

    # Fine-grained control over issue creation permissions.
    permissions:
      contents: 'read'
      pages: 'write'
      id-token: 'write'
      issues: 'write'

    # Only deploy on push to main, NOT on PRs.
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    steps:
      - name: Deploy to GitHub Pages
        id: gh-pages-deploy
        uses: 'actions/deploy-pages@v3'
      
      - name: Report Deployed URL to Actinons Log
        run: echo "Production url at ${{ steps.gh-pages-deploy.outputs.page_url }}"

      - name: Report Deployed URL as a New Issue
        uses: 'dacbd/create-issue-action@v2'
        with:
          token: ${{ github.token }}
          title: ':blue_book: New Documentation Deployment from ${{ github.sha }}'
          body: |
            To DEV's @technology team and the triggering person for this deployment @${{ github.triggering_actor }},

            The new documentation of ${{ github.repository }} has been deployed and live at: 
              
            > ${{ steps.gh-pages-deploy.outputs.page_url }}

            **Please reach out to keminghe.career[at]gmail.com for questions, otherwise, you can safely close this issue.**

            Have a great day!

    environment:
      name: github-pages
      url: ${{ steps.gh-pages-deploy.outputs.page_url}}

  # Part 1.5/2: Create download link for PR reviewers before deployment.
  generate-artifact-download:
    name: Generate Artifact Download
    runs-on: ubuntu-latest
    needs: build-gh-pages

    # Fine-grained control over PR comment creation permissions.
    permissions:
      contents: 'read'
      pages: 'read'
      pull-requests: 'write'

    # When reviewing a PR, download the artifact to preview the site.
    # The artifact should be statically host-able using any web browser.
    if: ${{ github.event_name == 'pull_request' }}
    
    steps:
      - name: Download Build Artifact
        id: download-artifact
        uses: 'actions/download-artifact@v4'
        with:
          name: 'gh-pages-build-artifact'
          path: './docs/_site/'

      # - name: Report Deployed URL to Actinons Log
      #   run: echo "Preview url at ${{ steps.download-artifact.outputs.download-path }}"

      # - name: Create PR Comment with Download Link
      #   uses: 'thollander/actions-comment-pull-request@v2'
      #   with:
      #     message: |
      #       To DEV's devops officer @KemingHe and the triggering person for this deployment @${{ github.triggering_actor }},

      #       The new **documentation** preview of ${{ github.repository }} is availabel for download and review at: 

      #       > ${{ steps.download-artifact.outputs.download-path }}

      #       **Please locally serve and manually test the artifact as part of the PR review process.**

      #       Have a great day!
